let Joi,Lab;_a6f‍.x([["default",()=>_a6f‍.o]]);_a6f‍.w("joi",[["default",["Joi"],function(v){Joi=v}]]);_a6f‍.w("../Model/lab",[["default",["Lab"],function(v){Lab=v}]]);




const labController={

    async addlab(req,res,next){
        const labsectionSchema= Joi.object({
            labSelection:Joi.string().required()
        })

        const{error}= labsectionSchema.validate(req.body)
        if(!error){
            return next(new Error('All filed are required.'))
        }

        const {labSelection}=req.body
        let labsec;
        try{
            labsec = await Lab.create({
            labSelection

          })
          if(!labsec){
            return next(new Error('LabSelection is empty'))
          }
        }catch(error){
            return next(error)
        }
        _a6f‍.g.console.log(labsec)
        res.json(labsec)

    },

    async deletelab(req,res,next){
        let labdelete;
        try{
            labdelete= await Lab.findByIdAndRemove({_id:req.params.id})
         if(!labdelete){
             return next(new Error('Noting to delete'))
         }
     
        }catch(error){
         return next(error)
        }
        res.json(labdelete)
     
     
       }

}


_a6f‍.d(labController);