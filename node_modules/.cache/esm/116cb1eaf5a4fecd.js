let Joi,Item,bcrypt,jsonwebservise;_f5a‍.x([["default",()=>_f5a‍.o]]);_f5a‍.w("joi",[["default",["Joi"],function(v){Joi=v}]]);_f5a‍.w("../Model/Item",[["default",["Item"],function(v){Item=v}]]);_f5a‍.w("bcrypt",[["default",["bcrypt"],function(v){bcrypt=v}]]);_f5a‍.w("../error/jsonwebtoken",[["default",["jsonwebservise"],function(v){jsonwebservise=v}]]);





const loginController={
   

async login(req,res,next){

    const loginSchma =Joi.object({
        email:Joi.string().email().required(),
                 password:Joi.string().required(),
    })


    const {error}= loginSchma.validate(req.body)
    if (error) {
      return next(error);
    }

// chek pass and email im the database....

try{  

  const user= await  Item.findOne({email:req.body.email});
  if(!user){
    return next(new Error('User not Found'))

  }
  const password = await bcrypt.compare(req.body.password,user.password)
  if(!password){
    return next(new Error('Password not Found'))

  }

  let access_jwt_token = jsonwebservise.sign({id:user._id})



  res.json({access_jwt_token})

}catch(err){
    return next(err)

}
  


}




}
_f5a‍.d(loginController);